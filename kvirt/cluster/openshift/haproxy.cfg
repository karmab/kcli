global
    log         127.0.0.1 local2
    maxconn     4000
    daemon

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

listen stats-50000
    bind {{ api_ip }}:50000
    mode            http
    log             global
    maxconn 10
    timeout client  100s
    timeout server  100s
    timeout connect 100s
    # timeout queue   100s
    stats enable
    stats hide-version
    stats refresh 30s
    stats show-node
    stats auth admin:password
    stats uri  /haproxy?stats

{% if workers > 0 %}
{% set ingresses = workers %}
{% set ingressprefix = "worker" %}
{% else %}
{% set ingresses = ctlplanes %}
{% set ingressprefix = "ctlplane" %}
{% endif %}

{% if ingressprefix = "ctlplane" %}
{% set final_ip = '127.0.0.1' %}
{% elif ingress_ip != None %}
{% set final_ip = ingress_ip %}
{% else %}
{% set final_ip = api_ip %}
{% endif %}

{% set final_domain = domain.replace('.', '-') if config_type == 'kubevirt' else '%s.%s' % (cluster, domain) %}

{% set http_port = 8000 if ingressprefix = "ctlplane" else 80 %}
{% set https_port = 1443 if ingressprefix = "ctlplane" else 443 %}

listen ingress-http
    bind {{ final_ip }}:{{ http_port }}
    mode tcp
    balance source
{% for num in range(0, ingresses) %}
 {% set server = baremetal_hosts[num]['fqdn'] if baremetal_hosts is defined and baremetal_hosts|length > num and 'fqdn' in baremetal_hosts[num] else "%s-%s-%s.%s" % (cluster, ingressprefix, num, final_domain) %}
    server {{ ingressprefix }}{{ num }} {{ server }}:80 check inter 1s
{% endfor %}

listen ingress-https
    bind {{ final_ip }}:{{ https_port }}
    mode tcp
    balance source
{% for num in range(0, ingresses) %}
 {% set server = baremetal_hosts[num]['fqdn'] if baremetal_hosts is defined and baremetal_hosts|length > num and 'fqdn' in baremetal_hosts[num] else "%s-%s-%s.%s" % (cluster, ingressprefix, num, final_domain) %}
    server {{ ingressprefix }}{{ num }} {{ server }}:443 check inter 1s
{% endfor %}
