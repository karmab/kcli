{% for num in range(0, ctlplanes|int) %}
{% if extra_ctlplane_networks %}
{% set extra_networks = extra_ctlplane_networks %}
{% endif %}
{% if extra_ctlplane_disks %}
{% set extra_disks = extra_ctlplane_disks %}
{% endif %}
{% if flavor_ctlplane != None %}
{% set flavor = flavor_ctlplane %}
{% endif %}

{{ cluster }}-ctlplane-{{ num }}:
 domain: {{ domain }} 
 image: {{ image }}
 pool: {{ pool or config_pool }}
 enableroot: false 
 notify: false
 flavor: {{ flavor }}
 keys: {{ keys }}
 numcpus: {{ ctlplane_numcpus | default(numcpus, numcpus) }}
 memory: {{ ctlplane_memory | default(memory, memory) }}
 autostart: {{ autostart }}
{% if kvm_forcestack %}
 cmdline: {{ 'ip=dhcp6' if ':' in api_ip else 'ip=dhcp' }}
{% endif %}
{% if kubevirt_api_service %}
 reservedns: true
{% endif %}
 nets: {{ [network] + extra_networks }}
 disks: {{ [disk_size] + extra_disks }}
{% if coredns or mdns or keepalived or bgp %}
 files:
{% endif %}
{% if bgp %}
 - path: /etc/kubernetes/manifests/bgp.yml
   origin: staticpods/bgp.yml
 - path: /etc/kubernetes/daemons
   origin: frr_daemons
 - path: /etc/kubernetes/frr.conf
   origin: frr.conf
   peers: {{ bgp_peers|filter_bgp_peers(loop.index) }}
 - path: /usr/local/bin/bgp-vip.sh
   origin: bgp-vip.sh
   mode: 700
 - path: /etc/systemd/system/bgp-vip.service
   content: |
      [Unit]
      Description=manage VIP
      [Service]
      Type=oneshot
      ExecStart=/usr/local/bin/bgp-vip.sh
 - path: /etc/systemd/system/bgp-vip.timer
   content: |
      [Unit]
      Description=Run BGP VIP periodically
      [Timer]
      OnBootSec=5
      OnUnitActiveSec=5
      [Install]
      WantedBy=timers.target
 - path: /etc/systemd/system/timers.target.wants/bgp-vip.timer
   target: /etc/systemd/system/bgp-vip.timer
{% endif %}
{% if coredns %}
 - path: /etc/NetworkManager/dispatcher.d/99-kcli-forcedns
   origin: 99-kcli-forcedns
   mode: 755
 - path: /etc/kubernetes/manifests/coredns.yml
   origin: staticpods/coredns.yml
 - path: /etc/kubernetes/Corefile
   origin: Corefile
{% endif %}
{% if mdns %}
 - path: /etc/kubernetes/manifests/mdns.yml
   origin: staticpods/mdns.yml
 - path: /etc/kubernetes/config.hcl.templ
   origin: config.hcl.templ
{% endif %}
{% if mdns or kubevirt_api_service %}
 - path: /etc/kubernetes/manifests/haproxy.yml
   origin: staticpods/haproxy.yml
 - path: /etc/kubernetes/haproxy.cfg
   origin: haproxy.cfg{{ '.kubevirt' if kubevirt_api_service else '' }}
 - path: /etc/sysctl.d/nonlocalbind.conf
   origin: nonlocalbind.conf
{% endif %}
{% if keepalived and not kubevirt_api_service %}
 - path: /etc/kubernetes/manifests/keepalived.yml
   origin: staticpods/keepalived.yml
 - path: /etc/kubernetes/keepalived.conf
   origin: keepalived.conf
{% endif %}
{% if ipv6 %}
 - path: /etc/NetworkManager/conf.d/kcli-ipv6.conf
   origin: kcli-ipv6.conf.j2
{% endif %}
{% if async and num == 0 %}
 - path: /etc/kubernetes/kubeconfig.{{ cluster }}
   origin: ~/.kcli/clusters/{{ cluster }}/auth/kubeconfig
{% endif %}
{% if files|default([]) %}
 extra_files: {{ files }}
{% endif %}
{% endfor %}
