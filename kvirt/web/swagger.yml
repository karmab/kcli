openapi: 3.0.0
info:
  version: 1.0.0
  title: Kcli web API
  description: Kcli web API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
components:
  schemas:
    Result:
      type: object
      properties:
        result:
          type: string
        reason:
          type: string
      example:
          result: success
    Vm:
      type: object
      properties:
        creationdate:
          type: string
        id:
          type: string
        image:
          type: string
        ip:
          type: string
        ips:
          type: array
          items:
            type: string
        info:
          type: string
        kube:
          type: string
        kubetype:
          type: string
        name:
          type: string
        nets:
          type: array
          items:
            type: string
        plan:
          type: string
        profile:
          type: string
        status:
          type: string
        user:
          type: string
paths:
  /containers:
    get:
      description: Returns list of containers
      responses:
        '200':
          description: Successfully returned list of containers
          content:
            application/json:
              schema:
                type: object 
                properties:
                  containers:
                    type: array
                    items:
                      type: string
    post:
      description: Create container
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                profile:
                  type: string
      responses:
        '200':
          description: Successfully created container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /containers/{container}:
    delete:
      description: Delete container
      parameters:
      - name: container
        in: path
        description: Container name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully deleted container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /containers/{container}/start:
    post:
      description: Start container
      parameters:
      - name: container
        in: path
        description: Container name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully started container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /containers/{container}/stop:
    post:
      description: Stop container
      parameters:
      - name: container
        in: path
        description: Container name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully stopped container
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /containerprofiles:
    get:
      description: Returns list of container profiles
      responses:
        '200':
          description: Successfully returned list of containers
          content:
            application/json:
              schema:
                type: object
                properties:
                  profiles:
                    type: array
                    items:
                      type: string
  /disks/{name}:
    post:
      description: Add disk to vm
      parameters:
      - name: name
        in: path
        description: Vm name
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                size:
                  type: integer
                pool:
                  type: string
      responses:
        '200':
          description: Successfully added disk
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
    delete:
      description: Delete disk from vm
      parameters:
      - name: name
        in: path
        description: Vm name
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                disk:
                  type: string
      responses:
        '200':
          description: Successfully deleted disk
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /hosts:
    get:
      description: Returns list of hosts
      responses:
        '200':
          description: Successfully returned list of hosts
          content:
            application/json:
              schema:
                type: object
                properties:
                  clients:
                    type: array
                    items:
                      type: string
  /hosts/{name}/disable:
    post:
      description: Disable host
      parameters:
      - name: name
        in: path
        description: Host name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully disabled host
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /hosts/{name}/enable:
    post:
      description: Enable host
      parameters:
      - name: name
        in: path
        description: Host name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully enabled host
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /hosts/{name}/switch:
    post:
      description: Switch host
      parameters:
      - name: name
        in: path
        description: Vm name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully switched host
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /images:
    post:
      description: Create image
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                pool:
                  type: string
                url:
                  type: string
                cmd:
                  type: string
      responses:
        '200':
          description: Successfully created image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
    get:
      description: Returns list of images
      responses:
        '200':
          description: Successfully returned list of images
          content:
            application/json:
              schema:
                type: object 
                properties:
                  images:
                    type: array
                    items:
                      type: string
  /isos:
    get:
      description: Returns list of isos
      responses:
        '200':
          description: Successfully returned list of isos
          content:
            application/json:
              schema:
                type: object 
                properties:
                  isos:
                    type: array
                    items:
                      type: string
  /kubes:
    post:
      description: Create kube
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cluster:
                  type: string
                type:
                  type: string
                  enum: [generic, openshift, k3s, microshift, hypershift, kind]
                parameters:
                  type: string
      responses:
        '200':
          description: Successfully created kube
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
    get:
      description: Returns list of kubes
      responses:
        '200':
          description: Successfully returned list of kubes
          content:
            application/json:
              schema:
                type: object 
                properties:
                  kubes:
                    type: array
                    items:
                      type: string
  /networks:
    get:
      description: Returns list of networks
      responses:
        '200':
          description: Successfully returned list of networks
          content:
            application/json:
              schema:
                type: object 
                properties:
                  networks:
                    type: array
                    items:
                      type: string
    post:
      description: Create network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                network:
                  type: string
                cidr:
                  type: string
                dhcp:
                  type: boolean
                isolated:
                  type: boolean
      responses:
        '200':
          description: Successfully created network
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /networks/{network}:
    delete:
      description: Delete network
      parameters:
      - name: network
        in: path
        description: Network name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully deleted network
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /nics/{name}:
    post:
      description: Add nic to vm
      parameters:
      - name: name
        in: path
        description: Vm name
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                network:
                  type: string
                nic:
                  type: string
      responses:
        '200':
          description: Successfully added nic
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
    delete:
      description: Delete nic from vm
      parameters:
      - name: name
        in: path
        description: Vm name
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nic:
                  type: string
      responses:
        '200':
          description: Successfully deleted nic
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /plans:
    get:
      description: Returns list of plans
      responses:
        '200':
          description: Successfully returned list of plans
          content:
            application/json:
              schema:
                type: object 
                properties:
                  plans:
                    type: array
                    items:
                      type: string
    post:
      description: Create plan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
      responses:
        '200':
          description: Successfully created plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /plans/{plan}:
    delete:
      description: Delete plan
      parameters:
      - name: plan
        in: path
        description: Plan name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully deleted plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /plans/{plan}/start:
    post:
      description: Start plan
      parameters:
      - name: plan
        in: path
        description: Plan name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully started plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /plans/{plan}/stop:
    post:
      description: Stop plan
      parameters:
      - name: plan
        in: path
        description: Plan name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully stopped plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /pools:
    get:
      description: Returns list of pools
      responses:
        '200':
          description: Successfully returned list of pools
          content:
            application/json:
              schema:
                type: object 
                properties:
                  pools:
                    type: array
                    items:
                      type: string
    post:
      description: Create pool
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pool:
                  type: string
                path:
                  type: string
      responses:
        '200':
          description: Successfully created pool
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /pools/{pool}:
    delete:
      description: Delete pool
      parameters:
      - name: pool
        in: path
        description: Pool name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully deleted pool
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /products:
    get:
      description: Returns list of products
      responses:
        '200':
          description: Successfully returned list of products
          content:
            application/json:
              schema:
                type: object 
                properties:
                  products:
                    type: array
                    items:
                      type: string
    post:
      description: Create product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: string
      responses:
        '200':
          description: Successfully created product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /repos:
    get:
      description: Returns list of repos
      responses:
        '200':
          description: Successfully returned list of repos
          content:
            application/json:
              schema:
                type: object 
                properties:
                  repos:
                    type: array
                    items:
                      type: string
    post:
      description: Create repo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                repo:
                  type: string
                url:
                  type: string
      responses:
        '200':
          description: Successfully created repo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /repos/{repo}:
    delete:
      description: Delete repo
      parameters:
      - name: repo
        in: path
        description: Repo name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully deleted repo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
    patch:
      description: Update repo
      parameters:
      - name: repo
        in: path
        description: Repo name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully updated repo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /snapshots/{name}:
    get:
      description: List snapshots of a vm
      parameters:
      - name: name
        in: path
        description: Vm name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully listed snapshots
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    delete:
      description: Delete snapshot of a vm
      parameters:
      - name: name
        in: path
        description: Vm name
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                snapshot:
                  type: string
      responses:
        '200':
          description: Successfully deleted snapshot
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
    post:
      description: Create snapshot for a vm
      parameters:
      - name: name
        in: path
        description: Vm name
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                snapshot:
                  type: string
      responses:
        '200':
          description: Successfully created snapshot
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /snapshots/{name}/revert:
    post:
      description: Revert snapshot of a vm
      parameters:
      - name: name
        in: path
        description: Vm name
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                snapshot:
                  type: string
      responses:
        '200':
          description: Successfully reverted snapshot
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /vms:
    get:
      description: Returns list of vms
      responses:
        '200':
          description: Successfully returned list of vms
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vm'
    post:
      description: Create vm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                profile:
                  type: string
                parameters:
                  type: object
      responses:
        '200':
          description: Successfully created vm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /vms/{name}:
    delete:
      description: Delete vm
      parameters:
      - name: name
        in: path
        description: Vm name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully deleted vm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /vms/{name}/start:
    post:
      description: Start vm
      parameters:
      - name: name
        in: path
        description: Vm name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully started vm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /vms/{name}/stop:
    post:
      description: Stop vm
      parameters:
      - name: name
        in: path
        description: Vm name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully stopped vm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
              example:
                result: failure
                reason: Invalid data
  /vmprofiles:
    get:
      description: Returns list of profiles
      responses:
        '200':
          description: Successfully returned list of profiles
          content:
            application/json:
              schema:
                type: object 
                properties:
                  profiles:
                    type: array
                    items:
                      type: string
